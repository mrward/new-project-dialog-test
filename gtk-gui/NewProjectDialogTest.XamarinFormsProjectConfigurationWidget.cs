
// This file has been generated by the GUI designer. Do not modify.
namespace NewProjectDialogTest
{
	public partial class XamarinFormsProjectConfigurationWidget
	{
		private global::Gtk.EventBox mainEventBox;
		
		private global::Gtk.HBox mainHBox;
		
		private global::Gtk.Table configurationTable;
		
		private global::Gtk.HBox appNameHBox;
		
		private global::Gtk.Label appNamePaddingLabel;
		
		private global::Gtk.Label appNameLabel;
		
		private global::Gtk.Entry appNameTextBox;
		
		private global::Gtk.HBox identifierHBox;
		
		private global::Gtk.Label identifierPaddingLabel;
		
		private global::Gtk.Label identifierLabel;
		
		private global::Gtk.Entry identifierTextBox;
		
		private global::Gtk.Label spacerLabel;
		
		private global::Gtk.Label spacerLabel2;
		
		private global::Gtk.HBox targetPlatformsHBox;
		
		private global::Gtk.Label targetPlatformsPaddingLabel;
		
		private global::Gtk.Label targetPlatformsLabel;
		
		private global::Gtk.VBox targetPlatformsVBox;
		
		private global::Gtk.CheckButton iOSCheckButton;
		
		private global::Gtk.CheckButton androidCheckButton;
		
		private global::Gtk.CheckButton windowsPhoneButton;
		
		private global::Gtk.VBox useMapsVBox;
		
		private global::Gtk.CheckButton useMapsCheckButton;
		
		private global::Gtk.HBox mapsIncreasesBuildTimesHBox;
		
		private global::Gtk.Label mapsIncreasesBuildTimesLabel;
		
		private global::Gtk.Label mapsIncreasesBuildTimesPaddingLabel;
		
		private global::Gtk.Image backgroundImage;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget NewProjectDialogTest.XamarinFormsProjectConfigurationWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "NewProjectDialogTest.XamarinFormsProjectConfigurationWidget";
			// Container child NewProjectDialogTest.XamarinFormsProjectConfigurationWidget.Gtk.Container+ContainerChild
			this.mainEventBox = new global::Gtk.EventBox ();
			this.mainEventBox.Name = "mainEventBox";
			// Container child mainEventBox.Gtk.Container+ContainerChild
			this.mainHBox = new global::Gtk.HBox ();
			this.mainHBox.Name = "mainHBox";
			this.mainHBox.Spacing = 6;
			// Container child mainHBox.Gtk.Box+BoxChild
			this.configurationTable = new global::Gtk.Table (((uint)(6)), ((uint)(2)), false);
			this.configurationTable.Name = "configurationTable";
			this.configurationTable.RowSpacing = ((uint)(6));
			this.configurationTable.ColumnSpacing = ((uint)(6));
			this.configurationTable.BorderWidth = ((uint)(40));
			// Container child configurationTable.Gtk.Table+TableChild
			this.appNameHBox = new global::Gtk.HBox ();
			this.appNameHBox.Name = "appNameHBox";
			this.appNameHBox.Spacing = 6;
			// Container child appNameHBox.Gtk.Box+BoxChild
			this.appNamePaddingLabel = new global::Gtk.Label ();
			this.appNamePaddingLabel.Name = "appNamePaddingLabel";
			this.appNameHBox.Add (this.appNamePaddingLabel);
			global::Gtk.Box.BoxChild w1 = ((global::Gtk.Box.BoxChild)(this.appNameHBox [this.appNamePaddingLabel]));
			w1.Position = 0;
			// Container child appNameHBox.Gtk.Box+BoxChild
			this.appNameLabel = new global::Gtk.Label ();
			this.appNameLabel.Name = "appNameLabel";
			this.appNameLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("App Name");
			this.appNameLabel.Justify = ((global::Gtk.Justification)(1));
			this.appNameHBox.Add (this.appNameLabel);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.appNameHBox [this.appNameLabel]));
			w2.Position = 1;
			w2.Expand = false;
			w2.Fill = false;
			w2.Padding = ((uint)(10));
			this.configurationTable.Add (this.appNameHBox);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.configurationTable [this.appNameHBox]));
			w3.XOptions = ((global::Gtk.AttachOptions)(4));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child configurationTable.Gtk.Table+TableChild
			this.appNameTextBox = new global::Gtk.Entry ();
			this.appNameTextBox.CanFocus = true;
			this.appNameTextBox.Name = "appNameTextBox";
			this.appNameTextBox.IsEditable = true;
			this.appNameTextBox.InvisibleChar = '●';
			this.configurationTable.Add (this.appNameTextBox);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.configurationTable [this.appNameTextBox]));
			w4.LeftAttach = ((uint)(1));
			w4.RightAttach = ((uint)(2));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child configurationTable.Gtk.Table+TableChild
			this.identifierHBox = new global::Gtk.HBox ();
			this.identifierHBox.Name = "identifierHBox";
			this.identifierHBox.Spacing = 6;
			// Container child identifierHBox.Gtk.Box+BoxChild
			this.identifierPaddingLabel = new global::Gtk.Label ();
			this.identifierPaddingLabel.Name = "identifierPaddingLabel";
			this.identifierHBox.Add (this.identifierPaddingLabel);
			global::Gtk.Box.BoxChild w5 = ((global::Gtk.Box.BoxChild)(this.identifierHBox [this.identifierPaddingLabel]));
			w5.Position = 0;
			// Container child identifierHBox.Gtk.Box+BoxChild
			this.identifierLabel = new global::Gtk.Label ();
			this.identifierLabel.Name = "identifierLabel";
			this.identifierLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Identifier");
			this.identifierLabel.Justify = ((global::Gtk.Justification)(1));
			this.identifierHBox.Add (this.identifierLabel);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.identifierHBox [this.identifierLabel]));
			w6.Position = 1;
			w6.Expand = false;
			w6.Fill = false;
			w6.Padding = ((uint)(10));
			this.configurationTable.Add (this.identifierHBox);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.configurationTable [this.identifierHBox]));
			w7.TopAttach = ((uint)(1));
			w7.BottomAttach = ((uint)(2));
			w7.XOptions = ((global::Gtk.AttachOptions)(4));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child configurationTable.Gtk.Table+TableChild
			this.identifierTextBox = new global::Gtk.Entry ();
			this.identifierTextBox.CanFocus = true;
			this.identifierTextBox.Name = "identifierTextBox";
			this.identifierTextBox.IsEditable = true;
			this.identifierTextBox.InvisibleChar = '●';
			this.configurationTable.Add (this.identifierTextBox);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.configurationTable [this.identifierTextBox]));
			w8.TopAttach = ((uint)(1));
			w8.BottomAttach = ((uint)(2));
			w8.LeftAttach = ((uint)(1));
			w8.RightAttach = ((uint)(2));
			w8.XOptions = ((global::Gtk.AttachOptions)(4));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child configurationTable.Gtk.Table+TableChild
			this.spacerLabel = new global::Gtk.Label ();
			this.spacerLabel.Name = "spacerLabel";
			this.configurationTable.Add (this.spacerLabel);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.configurationTable [this.spacerLabel]));
			w9.TopAttach = ((uint)(2));
			w9.BottomAttach = ((uint)(3));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child configurationTable.Gtk.Table+TableChild
			this.spacerLabel2 = new global::Gtk.Label ();
			this.spacerLabel2.Name = "spacerLabel2";
			this.configurationTable.Add (this.spacerLabel2);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.configurationTable [this.spacerLabel2]));
			w10.TopAttach = ((uint)(4));
			w10.BottomAttach = ((uint)(5));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child configurationTable.Gtk.Table+TableChild
			this.targetPlatformsHBox = new global::Gtk.HBox ();
			this.targetPlatformsHBox.Name = "targetPlatformsHBox";
			this.targetPlatformsHBox.Spacing = 6;
			// Container child targetPlatformsHBox.Gtk.Box+BoxChild
			this.targetPlatformsPaddingLabel = new global::Gtk.Label ();
			this.targetPlatformsPaddingLabel.Name = "targetPlatformsPaddingLabel";
			this.targetPlatformsHBox.Add (this.targetPlatformsPaddingLabel);
			global::Gtk.Box.BoxChild w11 = ((global::Gtk.Box.BoxChild)(this.targetPlatformsHBox [this.targetPlatformsPaddingLabel]));
			w11.Position = 0;
			// Container child targetPlatformsHBox.Gtk.Box+BoxChild
			this.targetPlatformsLabel = new global::Gtk.Label ();
			this.targetPlatformsLabel.Name = "targetPlatformsLabel";
			this.targetPlatformsLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("Target\nPlatforms");
			this.targetPlatformsLabel.Justify = ((global::Gtk.Justification)(1));
			this.targetPlatformsHBox.Add (this.targetPlatformsLabel);
			global::Gtk.Box.BoxChild w12 = ((global::Gtk.Box.BoxChild)(this.targetPlatformsHBox [this.targetPlatformsLabel]));
			w12.Position = 1;
			w12.Expand = false;
			w12.Fill = false;
			w12.Padding = ((uint)(10));
			this.configurationTable.Add (this.targetPlatformsHBox);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.configurationTable [this.targetPlatformsHBox]));
			w13.TopAttach = ((uint)(3));
			w13.BottomAttach = ((uint)(4));
			w13.XOptions = ((global::Gtk.AttachOptions)(4));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child configurationTable.Gtk.Table+TableChild
			this.targetPlatformsVBox = new global::Gtk.VBox ();
			this.targetPlatformsVBox.Name = "targetPlatformsVBox";
			this.targetPlatformsVBox.Spacing = 6;
			// Container child targetPlatformsVBox.Gtk.Box+BoxChild
			this.iOSCheckButton = new global::Gtk.CheckButton ();
			this.iOSCheckButton.CanFocus = true;
			this.iOSCheckButton.Name = "iOSCheckButton";
			this.iOSCheckButton.Label = global::Mono.Unix.Catalog.GetString ("iOS");
			this.iOSCheckButton.Active = true;
			this.iOSCheckButton.DrawIndicator = true;
			this.iOSCheckButton.UseUnderline = true;
			this.targetPlatformsVBox.Add (this.iOSCheckButton);
			global::Gtk.Box.BoxChild w14 = ((global::Gtk.Box.BoxChild)(this.targetPlatformsVBox [this.iOSCheckButton]));
			w14.Position = 0;
			w14.Expand = false;
			w14.Fill = false;
			// Container child targetPlatformsVBox.Gtk.Box+BoxChild
			this.androidCheckButton = new global::Gtk.CheckButton ();
			this.androidCheckButton.CanFocus = true;
			this.androidCheckButton.Name = "androidCheckButton";
			this.androidCheckButton.Label = global::Mono.Unix.Catalog.GetString ("Android");
			this.androidCheckButton.Active = true;
			this.androidCheckButton.DrawIndicator = true;
			this.androidCheckButton.UseUnderline = true;
			this.targetPlatformsVBox.Add (this.androidCheckButton);
			global::Gtk.Box.BoxChild w15 = ((global::Gtk.Box.BoxChild)(this.targetPlatformsVBox [this.androidCheckButton]));
			w15.Position = 1;
			w15.Expand = false;
			w15.Fill = false;
			// Container child targetPlatformsVBox.Gtk.Box+BoxChild
			this.windowsPhoneButton = new global::Gtk.CheckButton ();
			this.windowsPhoneButton.CanFocus = true;
			this.windowsPhoneButton.Name = "windowsPhoneButton";
			this.windowsPhoneButton.Label = global::Mono.Unix.Catalog.GetString ("Windows Phone");
			this.windowsPhoneButton.Active = true;
			this.windowsPhoneButton.DrawIndicator = true;
			this.windowsPhoneButton.UseUnderline = true;
			this.targetPlatformsVBox.Add (this.windowsPhoneButton);
			global::Gtk.Box.BoxChild w16 = ((global::Gtk.Box.BoxChild)(this.targetPlatformsVBox [this.windowsPhoneButton]));
			w16.Position = 2;
			w16.Expand = false;
			w16.Fill = false;
			this.configurationTable.Add (this.targetPlatformsVBox);
			global::Gtk.Table.TableChild w17 = ((global::Gtk.Table.TableChild)(this.configurationTable [this.targetPlatformsVBox]));
			w17.TopAttach = ((uint)(3));
			w17.BottomAttach = ((uint)(4));
			w17.LeftAttach = ((uint)(1));
			w17.RightAttach = ((uint)(2));
			w17.XOptions = ((global::Gtk.AttachOptions)(4));
			w17.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child configurationTable.Gtk.Table+TableChild
			this.useMapsVBox = new global::Gtk.VBox ();
			this.useMapsVBox.Name = "useMapsVBox";
			this.useMapsVBox.Spacing = 6;
			// Container child useMapsVBox.Gtk.Box+BoxChild
			this.useMapsCheckButton = new global::Gtk.CheckButton ();
			this.useMapsCheckButton.CanFocus = true;
			this.useMapsCheckButton.Name = "useMapsCheckButton";
			this.useMapsCheckButton.Label = global::Mono.Unix.Catalog.GetString ("This app uses maps.");
			this.useMapsCheckButton.Active = true;
			this.useMapsCheckButton.DrawIndicator = true;
			this.useMapsCheckButton.UseUnderline = true;
			this.useMapsVBox.Add (this.useMapsCheckButton);
			global::Gtk.Box.BoxChild w18 = ((global::Gtk.Box.BoxChild)(this.useMapsVBox [this.useMapsCheckButton]));
			w18.Position = 0;
			w18.Expand = false;
			w18.Fill = false;
			// Container child useMapsVBox.Gtk.Box+BoxChild
			this.mapsIncreasesBuildTimesHBox = new global::Gtk.HBox ();
			this.mapsIncreasesBuildTimesHBox.Name = "mapsIncreasesBuildTimesHBox";
			this.mapsIncreasesBuildTimesHBox.Spacing = 6;
			// Container child mapsIncreasesBuildTimesHBox.Gtk.Box+BoxChild
			this.mapsIncreasesBuildTimesLabel = new global::Gtk.Label ();
			this.mapsIncreasesBuildTimesLabel.Name = "mapsIncreasesBuildTimesLabel";
			this.mapsIncreasesBuildTimesLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("<span foreground=\'#6A6A6A\'>Adding maps increases build times for Android.</span>");
			this.mapsIncreasesBuildTimesLabel.UseMarkup = true;
			this.mapsIncreasesBuildTimesHBox.Add (this.mapsIncreasesBuildTimesLabel);
			global::Gtk.Box.BoxChild w19 = ((global::Gtk.Box.BoxChild)(this.mapsIncreasesBuildTimesHBox [this.mapsIncreasesBuildTimesLabel]));
			w19.Position = 0;
			w19.Expand = false;
			w19.Fill = false;
			// Container child mapsIncreasesBuildTimesHBox.Gtk.Box+BoxChild
			this.mapsIncreasesBuildTimesPaddingLabel = new global::Gtk.Label ();
			this.mapsIncreasesBuildTimesPaddingLabel.Name = "mapsIncreasesBuildTimesPaddingLabel";
			this.mapsIncreasesBuildTimesHBox.Add (this.mapsIncreasesBuildTimesPaddingLabel);
			global::Gtk.Box.BoxChild w20 = ((global::Gtk.Box.BoxChild)(this.mapsIncreasesBuildTimesHBox [this.mapsIncreasesBuildTimesPaddingLabel]));
			w20.Position = 1;
			this.useMapsVBox.Add (this.mapsIncreasesBuildTimesHBox);
			global::Gtk.Box.BoxChild w21 = ((global::Gtk.Box.BoxChild)(this.useMapsVBox [this.mapsIncreasesBuildTimesHBox]));
			w21.Position = 1;
			this.configurationTable.Add (this.useMapsVBox);
			global::Gtk.Table.TableChild w22 = ((global::Gtk.Table.TableChild)(this.configurationTable [this.useMapsVBox]));
			w22.TopAttach = ((uint)(5));
			w22.BottomAttach = ((uint)(6));
			w22.LeftAttach = ((uint)(1));
			w22.RightAttach = ((uint)(2));
			w22.XOptions = ((global::Gtk.AttachOptions)(4));
			w22.YOptions = ((global::Gtk.AttachOptions)(4));
			this.mainHBox.Add (this.configurationTable);
			global::Gtk.Box.BoxChild w23 = ((global::Gtk.Box.BoxChild)(this.mainHBox [this.configurationTable]));
			w23.Position = 0;
			// Container child mainHBox.Gtk.Box+BoxChild
			this.backgroundImage = new global::Gtk.Image ();
			this.backgroundImage.Name = "backgroundImage";
			this.backgroundImage.Pixbuf = global::Gdk.Pixbuf.LoadFromResource ("md-xamarin-forms-configuration");
			this.mainHBox.Add (this.backgroundImage);
			global::Gtk.Box.BoxChild w24 = ((global::Gtk.Box.BoxChild)(this.mainHBox [this.backgroundImage]));
			w24.Position = 1;
			w24.Expand = false;
			w24.Fill = false;
			w24.Padding = ((uint)(40));
			this.mainEventBox.Add (this.mainHBox);
			this.Add (this.mainEventBox);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Hide ();
		}
	}
}
